name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Format check
      run: uv run ruff format --check .
    
    - name: Lint
      run: uv run ruff check .
    
    - name: Type check
      run: uv run pyright
    
    - name: Test
      run: uv run pytest --cov=tree_creator --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.13
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Build package
      run: uv build
    
    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: package
        path: dist/

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV  
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.13
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: package
        path: dist/
    
    - name: Install package
      run: uv tool install dist/*.whl
    
    - name: Test CLI installation
      run: treemancer --version
    
    - name: Test basic functionality
      run: |
        treemancer generate-tree "test > file1.py file2.py dir1 > file3.py"
        treemancer from-syntax "test > main.py utils.py" --dry-run --output ./test-output
        treemancer from-file examples/project_structures.md --dry-run --output ./test-output